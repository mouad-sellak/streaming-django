# Generated by Django 4.0.3 on 2022-09-08 09:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Documentaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('date_création', models.DateField(null=True)),
                ('date_ajout', models.DateField(null=True)),
                ('date_modification', models.DateField(null=True)),
                ('type', models.CharField(choices=[('serie', 'Série'), ('documentaire', 'Documentaire'), ('film', 'Film'), ('music', 'Music')], default='serie', max_length=100, null=True)),
                ('duree', models.CharField(max_length=100, null=True)),
                ('Chaine', models.CharField(max_length=100, null=True)),
                ('resolution', models.CharField(max_length=100, null=True)),
                ('Url', models.URLField(max_length=100, null=True)),
                ('taille', models.CharField(max_length=100, null=True)),
                ('vdeo', models.FileField(null=True, upload_to='video/%y', verbose_name='vidéo')),
                ('image', models.ImageField(null=True, upload_to='image/%y', verbose_name='Image')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('producteur', models.CharField(max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('date_création', models.DateField(null=True)),
                ('date_ajout', models.DateField(null=True)),
                ('date_modification', models.DateField(null=True)),
                ('type', models.CharField(choices=[('serie', 'Série'), ('documentaire', 'Documentaire'), ('film', 'Film'), ('music', 'Music')], default='serie', max_length=100, null=True)),
                ('duree', models.CharField(max_length=100, null=True)),
                ('Chaine', models.CharField(max_length=100, null=True)),
                ('resolution', models.CharField(max_length=100, null=True)),
                ('Url', models.URLField(max_length=100, null=True)),
                ('taille', models.CharField(max_length=100, null=True)),
                ('vdeo', models.FileField(null=True, upload_to='video/%y', verbose_name='vidéo')),
                ('image', models.ImageField(null=True, upload_to='image/%y', verbose_name='Image')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('date_création', models.DateField(null=True)),
                ('date_ajout', models.DateField(null=True)),
                ('date_modification', models.DateField(null=True)),
                ('type', models.CharField(choices=[('serie', 'Série'), ('documentaire', 'Documentaire'), ('film', 'Film'), ('music', 'Music')], default='serie', max_length=100, null=True)),
                ('duree', models.CharField(max_length=100, null=True)),
                ('Chaine', models.CharField(max_length=100, null=True)),
                ('resolution', models.CharField(max_length=100, null=True)),
                ('Url', models.URLField(max_length=100, null=True)),
                ('taille', models.CharField(max_length=100, null=True)),
                ('vdeo', models.FileField(null=True, upload_to='video/%y', verbose_name='vidéo')),
                ('image', models.ImageField(null=True, upload_to='image/%y', verbose_name='Image')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('realisateur', models.CharField(max_length=50, null=True)),
                ('producteur', models.CharField(max_length=50, null=True)),
                ('acteur', models.CharField(max_length=50, null=True)),
                ('genre', models.CharField(choices=[('action', 'Action'), ('comedie', 'comédie'), ('histoire', 'Histoire'), ('drame', 'Drame'), ('aventure', 'aventure')], max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('date_création', models.DateField(null=True)),
                ('date_ajout', models.DateField(null=True)),
                ('date_modification', models.DateField(null=True)),
                ('type', models.CharField(choices=[('serie', 'Série'), ('documentaire', 'Documentaire'), ('film', 'Film'), ('music', 'Music')], default='serie', max_length=100, null=True)),
                ('duree', models.CharField(max_length=100, null=True)),
                ('Chaine', models.CharField(max_length=100, null=True)),
                ('resolution', models.CharField(max_length=100, null=True)),
                ('Url', models.URLField(max_length=100, null=True)),
                ('taille', models.CharField(max_length=100, null=True)),
                ('vdeo', models.FileField(null=True, upload_to='video/%y', verbose_name='vidéo')),
                ('image', models.ImageField(null=True, upload_to='image/%y', verbose_name='Image')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('chanteur', models.CharField(max_length=50, null=True)),
                ('producteur', models.CharField(max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('realisateur', models.CharField(max_length=50, null=True)),
                ('producteur', models.CharField(max_length=50, null=True)),
                ('genre', models.CharField(choices=[('action', 'Action'), ('comedie', 'comédie'), ('histoire', 'Histoire'), ('drame', 'Drame'), ('aventure', 'aventure')], max_length=200, null=True)),
                ('acteur', models.CharField(max_length=50, null=True)),
            ],
        ),
      
        migrations.CreateModel(
            name='FavoriteVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documentaire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='video.documentaire')),
                ('episode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='video.episode')),
                ('film', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='video.film')),
                ('music', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='video.music')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='episode',
            name='serie',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='video.serie'),
        ),
    ]
